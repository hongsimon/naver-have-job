<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:component-scan base-package="jobless.dao" />
	<context:component-scan base-package="jobless.dao.condition" />
	<context:component-scan base-package="jobless.model" />
	<context:component-scan base-package="jobless.service" />
	<context:component-scan base-package="jobless.controller" />
	

	<context:property-placeholder location="classpath:dbConfig.properties" />

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${db.driverClass}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
		<property name="maxUploadSize" value="10485760"/>
		<property name="maxUploadSizePerFile" value="10485760"/>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:SqlMapConfig.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:mapper/boardCategoryMapper.xml</value>
				<value>classpath:mapper/boardApplyMapper.xml</value>
				<value>classpath:mapper/boardMapper.xml</value>
				<value>classpath:mapper/clipMapper.xml</value>
				<value>classpath:mapper/commentMapper.xml</value>
				<value>classpath:mapper/contentMapper.xml</value>
				<value>classpath:mapper/iconMapper.xml</value>
				<value>classpath:mapper/likeMapper.xml</value>
				<value>classpath:mapper/platformMapper.xml</value>
				<value>classpath:mapper/postMapper.xml</value>
				<value>classpath:mapper/userMapper.xml</value>
			</list>
		</property>
	</bean>

	<bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="jobless." />
		<property name="annotationClass" value="jobless.dao.mapper.MyAnnotMapper" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="auth*" rollback-for="RuntimeException" />
			<tx:method name="insert*" rollback-for="RuntimeException" />
			<tx:method name="write*" rollback-for="RuntimeException" />
			<tx:method name="add*" rollback-for="RuntimeException" />
			<tx:method name="create*" rollback-for="RuntimeException" />
			<tx:method name="regist*" rollback-for="RuntimeException" />
			<tx:method name="set*" rollback-for="RuntimeException" />
			<tx:method name="update*" rollback-for="RuntimeException" />
			<tx:method name="modify*" rollback-for="RuntimeException" />
			<tx:method name="edit*" rollback-for="RuntimeException" />
			<tx:method name="change*" rollback-for="RuntimeException" />
			<tx:method name="delete*" rollback-for="RuntimeException" />
			<tx:method name="remove" rollback-for="RuntimeException" />
			<tx:method name="terminate*" rollback-for="RuntimeException" />
			<tx:method name="read*" rollback-for="RuntimeException" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="auth*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="transactionPoint" expression="execution(public * jobless.service.*.*Service.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="transactionPoint"/>
	</aop:config>
	
	<aop:aspectj-autoproxy expose-proxy="true"/>
	
</beans>
